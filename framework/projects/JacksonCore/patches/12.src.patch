diff --git a/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java b/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
index a8acfc87..734e92c2 100644
--- a/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
+++ b/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
@@ -422,10 +422,14 @@ public class UTF8JsonGenerator
         }
         // First: if we can't guarantee it all fits, quoted, within output, offline
         final int len = text.length();
-        if (len > _outputMaxContiguous) { // nope: off-line handling
+        if (len > _charBufferLength) { // nope: off-line handling
             _writeStringSegments(text, true);
             return;
         }
+        if (len > _outputMaxContiguous) {
+            _writeLongString(_charBuffer, 0, len);
+            return;
+        }
         if ((_outputTail + len) >= _outputEnd) {
             _flushBuffer();
         }
@@ -437,6 +441,19 @@ public class UTF8JsonGenerator
         _outputBuffer[_outputTail++] = BYTE_QUOTE;
     }
 
+    private void _writeLongString(char[] text, int offset, int len) throws IOException
+    {
+        if (_outputTail >= _outputEnd) {
+            _flushBuffer();
+        }
+        _outputBuffer[_outputTail++] = BYTE_QUOTE;
+        _writeStringSegments(text, 0, len);
+        if (_outputTail >= _outputEnd) {
+            _flushBuffer();
+        }
+        _outputBuffer[_outputTail++] = BYTE_QUOTE;
+    }
+
     @Override
     public void writeString(char[] text, int offset, int len) throws IOException
     {
@@ -1134,13 +1151,15 @@ public class UTF8JsonGenerator
 
         int left = text.length();
         int offset = 0;
+        final char[] cbuf = _charBuffer;
 
         while (left > 0) {
             int len = Math.min(_outputMaxContiguous, left);
+            text.getChars(offset, offset+len, cbuf, 0);
             if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space
                 _flushBuffer();
             }
-            _writeStringSegment(text, offset, len);
+            _writeStringSegment(cbuf, 0, len);
             offset += len;
             left -= len;
         }
