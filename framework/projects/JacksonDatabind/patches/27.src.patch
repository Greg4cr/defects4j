diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java
index 43445e20d..8484caa92 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java
@@ -609,7 +609,7 @@ public abstract class BeanDeserializerBase
         if (extTypes != null) {
             // 21-Jun-2016, tatu: related to [databind#999], may need to link type ids too,
             //    so need to pass collected properties
-            _externalTypeIdHandler = extTypes.build(_beanProperties);
+            _externalTypeIdHandler = extTypes.build();
             // we consider this non-standard, to offline handling
             _nonStandardCreation = true;
         }
diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java
index 30fb56f78..4f12fbc67 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java
@@ -186,7 +186,6 @@ public class ExternalTypeHandler
         Object[] values = new Object[len];
         for (int i = 0; i < len; ++i) {
             String typeId = _typeIds[i];
-            final ExtTypedProperty extProp = _properties[i];
 
             if (typeId == null) {
                 // let's allow missing both type and property (may already have been set, too)
@@ -195,30 +194,27 @@ public class ExternalTypeHandler
                 }
                 // but not just one
                 // 26-Oct-2012, tatu: As per [databind#94], must allow use of 'defaultImpl'
-                if (!extProp.hasDefaultType()) {
+                if (!_properties[i].hasDefaultType()) {
                     ctxt.reportMappingException("Missing external type id property '%s'",
-                            extProp.getTypePropertyName());
+                            _properties[i].getTypePropertyName());
                 } else {
-                    typeId = extProp.getDefaultTypeId();
+                    typeId = _properties[i].getDefaultTypeId();
                 }
             } else if (_tokens[i] == null) {
-                SettableBeanProperty prop = extProp.getProperty();
+                SettableBeanProperty prop = _properties[i].getProperty();
                 ctxt.reportMappingException("Missing property '%s' for external type id '%s'",
                         prop.getName(), _properties[i].getTypePropertyName());
             }
             values[i] = _deserialize(p, ctxt, i, typeId);
-
-            final SettableBeanProperty prop = extProp.getProperty();
+        }
             // also: if it's creator prop, fill in
-            if (prop.getCreatorIndex() >= 0) {
+        for (int i = 0; i < len; ++i) {
+            SettableBeanProperty prop = _properties[i].getProperty();
+            if (creator.findCreatorProperty(prop.getName()) != null) {
                 buffer.assignParameter(prop, values[i]);
 
                 // [databind#999] And maybe there's creator property for type id too?
-                SettableBeanProperty typeProp = extProp.getTypeProperty();
                 // for now, should only be needed for creator properties, too
-                if ((typeProp != null) && (typeProp.getCreatorIndex() >= 0)) {
-                    buffer.assignParameter(typeProp, typeId);
-                }
             }
         }
 
@@ -226,7 +222,7 @@ public class ExternalTypeHandler
         // third: assign non-creator properties
         for (int i = 0; i < len; ++i) {
             SettableBeanProperty prop = _properties[i].getProperty();
-            if (prop.getCreatorIndex() < 0) {
+            if (creator.findCreatorProperty(prop.getName()) == null) {
                 prop.set(bean, values[i]);
             }
         }
@@ -307,23 +303,7 @@ public class ExternalTypeHandler
          *
          * @since 2.8
          */
-        public ExternalTypeHandler build(BeanPropertyMap otherProps) {
-            // 21-Jun-2016, tatu: as per [databind#999], may need to link type id property also
-            final int len = _properties.size();
-            ExtTypedProperty[] extProps = new ExtTypedProperty[len];
-            for (int i = 0; i < len; ++i) {
-                ExtTypedProperty extProp = _properties.get(i);
-                String typePropId = extProp.getTypePropertyName();
-                SettableBeanProperty typeProp = otherProps.find(typePropId);
-                if (typeProp != null) {
-                    extProp.linkTypeProperty(typeProp);
-                }
-                extProps[i] = extProp;
-            }
-            return new ExternalTypeHandler(extProps, _nameToPropertyIndex, null, null);
-        }
 
-        @Deprecated // since 2.8; may be removed as early as 2.9
         public ExternalTypeHandler build() {
             return new ExternalTypeHandler(_properties.toArray(new ExtTypedProperty[_properties.size()]),
                     _nameToPropertyIndex, null, null);
@@ -339,7 +319,6 @@ public class ExternalTypeHandler
         /**
          * @since 2.8
          */
-        private SettableBeanProperty _typeProperty;
 
         public ExtTypedProperty(SettableBeanProperty property, TypeDeserializer typeDeser)
         {
@@ -351,9 +330,6 @@ public class ExternalTypeHandler
         /**
          * @since 2.8
          */
-        public void linkTypeProperty(SettableBeanProperty p) {
-            _typeProperty = p;
-        }
 
         public boolean hasTypePropertyName(String n) {
             return n.equals(_typePropertyName);
@@ -385,8 +361,5 @@ public class ExternalTypeHandler
         /**
          * @since 2.8
          */
-        public SettableBeanProperty getTypeProperty() {
-            return _typeProperty;
-        }
     }
 }
