diff --git a/src/main/java/org/jsoup/helper/HttpConnection.java b/src/main/java/org/jsoup/helper/HttpConnection.java
index a215b56..89ad76c 100644
--- a/src/main/java/org/jsoup/helper/HttpConnection.java
+++ b/src/main/java/org/jsoup/helper/HttpConnection.java
@@ -714,7 +714,7 @@ public class HttpConnection implements Connection {
             statusMessage = conn.getResponseMessage();
             contentType = conn.getContentType();
 
-            Map<String, List<String>> resHeaders = createHeaderMap(conn);
+            Map<String, List<String>> resHeaders = conn.getHeaderFields();
             processResponseHeaders(resHeaders);
 
             // if from a redirect, map previous response cookies into this response
@@ -726,29 +726,7 @@ public class HttpConnection implements Connection {
             }
         }
 
-        private static LinkedHashMap<String, List<String>> createHeaderMap(HttpURLConnection conn) {
             // the default sun impl of conn.getHeaderFields() returns header values out of order
-            final LinkedHashMap<String, List<String>> headers = new LinkedHashMap<String, List<String>>();
-            int i = 0;
-            while (true) {
-                final String key = conn.getHeaderFieldKey(i);
-                final String val = conn.getHeaderField(i);
-                if (key == null && val == null)
-                    break;
-                i++;
-                if (key == null || val == null)
-                    continue; // skip http1.1 line
-
-                if (headers.containsKey(key))
-                    headers.get(key).add(val);
-                else {
-                    final ArrayList<String> vals = new ArrayList<String>();
-                    vals.add(val);
-                    headers.put(key, vals);
-                }
-            }
-            return headers;
-        }
 
         void processResponseHeaders(Map<String, List<String>> resHeaders) {
             for (Map.Entry<String, List<String>> entry : resHeaders.entrySet()) {
@@ -770,18 +748,8 @@ public class HttpConnection implements Connection {
                             cookie(cookieName, cookieVal);
                     }
                 } else { // combine same header names with comma: http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2
-                    if (values.size() == 1)
+                    if (!values.isEmpty())
                         header(name, values.get(0));
-                    else if (values.size() > 1) {
-                        StringBuilder accum = new StringBuilder();
-                        for (int i = 0; i < values.size(); i++) {
-                            final String val = values.get(i);
-                            if (i != 0)
-                                accum.append(", ");
-                            accum.append(val);
-                        }
-                        header(name, accum.toString());
-                    }
                 }
             }
         }
